{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedLanguage: 'fr-FR',\n      // Remplacez 'fr-FR' par la langue de votre choix\n      maxRepetitions: 3,\n      // Nombre maximal de répétitions autorisées\n      currentRepetition: 1,\n      timer: null,\n      timeLimit: 60,\n      // Temps limite en secondes\n      timeRemaining: 0,\n      subjects: [{\n        title: \"Sujet 1\",\n        difficulty: \"facile\",\n        text: \"Le test de dictée est un excellent moyen d'améliorer ses compétences en orthographe.\"\n      }, {\n        title: \"Sujet 2\",\n        difficulty: \"moyen\",\n        text: \"La dictée est un exercice classique souvent utilisé dans les écoles pour évaluer les capacités des élèves.\"\n      }, {\n        title: \"Sujet 3\",\n        difficulty: \"difficile\",\n        text: \"La vitesse de lecture et la précision sont des aspects importants lors d'un test de dictée.\"\n      }],\n      selectedDifficulty: \"\",\n      selectedSubject: null,\n      isDictationStarted: false,\n      currentText: \"\",\n      userInput: \"\"\n    };\n  },\n  computed: {\n    filteredSubjects() {\n      if (this.selectedDifficulty) {\n        return this.subjects.filter(subject => subject.difficulty === this.selectedDifficulty);\n      } else {\n        return this.subjects;\n      }\n    }\n  },\n  methods: {\n    createSubject() {\n      const newSubject = {\n        title: \"Nouveau sujet\",\n        difficulty: \"\",\n        text: \"\"\n      };\n      this.subjects.push(newSubject);\n      this.selectedSubject = newSubject;\n    },\n    updateSubject() {\n      // Implémentez la logique pour mettre à jour le sujet sélectionné\n    },\n    deleteSubject() {\n      // Implémentez la logique pour supprimer le sujet sélectionné\n    },\n    startDictation() {\n      this.currentRepetition = 1;\n      this.timeRemaining = this.timeLimit;\n      this.timer = setInterval(() => {\n        if (this.timeRemaining > 0) {\n          this.timeRemaining--;\n        } else {\n          clearInterval(this.timer);\n          this.checkAnswer();\n        }\n      }, 1000);\n      this.isDictationStarted = true;\n      this.currentText = this.selectedSubject.text;\n    },\n    speakText(text) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = this.selectedLanguage;\n      speechSynthesis.speak(utterance);\n    },\n    checkAnswer() {\n      const userAnswer = this.userInput.trim();\n      const expectedAnswer = this.selectedSubject.text.trim();\n      if (userAnswer === expectedAnswer) {\n        alert(\"Bonne réponse !\");\n      } else {\n        alert(\"Mauvaise réponse. Réessayez !\");\n      }\n      if (this.currentRepetition < this.maxRepetitions) {\n        this.currentRepetition++;\n        this.isDictationStarted = true;\n      } else {\n        // ...\n      }\n\n      // Réinitialiser les valeurs\n      this.isDictationStarted = false;\n      this.currentText = \"\";\n      this.userInput = \"\";\n    }\n  }\n};","map":{"version":3,"names":["data","selectedLanguage","maxRepetitions","currentRepetition","timer","timeLimit","timeRemaining","subjects","title","difficulty","text","selectedDifficulty","selectedSubject","isDictationStarted","currentText","userInput","computed","filteredSubjects","filter","subject","methods","createSubject","newSubject","push","updateSubject","deleteSubject","startDictation","setInterval","clearInterval","checkAnswer","speakText","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","speak","userAnswer","trim","expectedAnswer","alert"],"sources":["C:\\Users\\Abel\\Desktop\\VUE\\Dicte\\test-dictee-app\\src\\components\\HelloWorld.vue"],"sourcesContent":["import { subjects } from \"@/data\";\n\n<template>\n  <div class=\"test-dictation\">\n    <h1>Test de dictée</h1>\n    <h1>{{ $t(\"welcome\") }}</h1>\n    <div>\n      <label for=\"difficulty\">Niveau de difficulté :</label>\n      <select id=\"difficulty\" v-model=\"selectedDifficulty\">\n        <option value=\"facile\">Facile</option>\n        <option value=\"moyen\">Moyen</option>\n        <option value=\"difficile\">Difficile</option>\n      </select>\n    </div>\n\n    <div>\n      <label for=\"language\">Langue :</label>\n      <select id=\"language\" v-model=\"selectedLanguage\">\n        <option value=\"en-US\">English</option>\n        <option value=\"fr-FR\">Français</option>\n        <!-- Ajoutez d'autres options pour les autres langues si nécessaire -->\n      </select>\n    </div>\n\n    <div v-if=\"filteredSubjects.length > 0\">\n      <label for=\"subject\">Sujet :</label>\n      <select id=\"subject\" v-model=\"selectedSubject\">\n        <option value=\"\" disabled selected>Sélectionnez un sujet</option>\n        <option v-for=\"subject in filteredSubjects\" :key=\"subject.title\" :value=\"subject\">{{ subject.title }}</option>\n      </select>\n\n      <div class=\"subject-actions\">\n        <button @click=\"createSubject\">Nouveau sujet</button>\n        <button @click=\"updateSubject\">Mettre à jour</button>\n        <button @click=\"deleteSubject\">Supprimer</button>\n      </div>\n    </div>\n\n    <div v-if=\"selectedSubject\">\n      <h2>{{ selectedSubject.title }}</h2>\n      <button @click=\"startDictation\">Commencer la dictée</button>\n\n      <div v-if=\"isDictationStarted\">\n        <p>{{ currentText }}</p>\n        <textarea v-model=\"userInput\"></textarea>\n        <button @click=\"checkAnswer\">Vérifier</button>\n        <button @click=\"speakText(selectedSubject.text)\">Lire le texte</button>\n        <div>\n          <p>Temps restant : {{ timeRemaining }}s</p>\n        </div>\n        \n        <h2>{{ selectedSubject.title }}</h2>\n  <button @click=\"startDictation\">{{ $t(\"startDictation\") }}</button>\n  <div v-for=\"phrase in selectedSubject.phrases\" :key=\"phrase.text\">\n    <p>{{ phrase.text }}</p>\n    <input type=\"number\" v-model=\"phrase.repetitions\" min=\"1\">\n  </div>\n  <button @click=\"startGeneralRepeat\">{{ $t(\"startGeneralRepeat\") }}</button>\n        <div>\n          <p>Répétitions restantes : {{ maxRepetitions - currentRepetition }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selectedLanguage: 'fr-FR', // Remplacez 'fr-FR' par la langue de votre choix\n      maxRepetitions: 3, // Nombre maximal de répétitions autorisées\n      currentRepetition: 1,\n      timer: null,\n      timeLimit: 60, // Temps limite en secondes\n      timeRemaining: 0,\n\n      subjects: [\n        {\n          title: \"Sujet 1\",\n          difficulty: \"facile\",\n          text: \"Le test de dictée est un excellent moyen d'améliorer ses compétences en orthographe.\"\n        },\n        {\n          title: \"Sujet 2\",\n          difficulty: \"moyen\",\n          text: \"La dictée est un exercice classique souvent utilisé dans les écoles pour évaluer les capacités des élèves.\"\n        },\n        {\n          title: \"Sujet 3\",\n          difficulty: \"difficile\",\n          text: \"La vitesse de lecture et la précision sont des aspects importants lors d'un test de dictée.\"\n},\n],\nselectedDifficulty: \"\",\nselectedSubject: null,\nisDictationStarted: false,\ncurrentText: \"\",\nuserInput: \"\"\n};\n},\n\ncomputed: {\nfilteredSubjects() {\nif (this.selectedDifficulty) {\nreturn this.subjects.filter(subject => subject.difficulty === this.selectedDifficulty);\n} else {\nreturn this.subjects;\n}\n}\n},\nmethods: {\ncreateSubject() {\nconst newSubject = {\ntitle: \"Nouveau sujet\",\ndifficulty: \"\",\ntext: \"\"\n};\nthis.subjects.push(newSubject);\nthis.selectedSubject = newSubject;\n},\nupdateSubject() {\n// Implémentez la logique pour mettre à jour le sujet sélectionné\n},\ndeleteSubject() {\n// Implémentez la logique pour supprimer le sujet sélectionné\n},\nstartDictation() {\nthis.currentRepetition = 1;\nthis.timeRemaining = this.timeLimit;\nthis.timer = setInterval(() => {\nif (this.timeRemaining > 0) {\nthis.timeRemaining--;\n} else {\nclearInterval(this.timer);\nthis.checkAnswer();\n}\n}, 1000);\nthis.isDictationStarted = true;\nthis.currentText = this.selectedSubject.text;\n},\nspeakText(text) {\nconst utterance = new SpeechSynthesisUtterance(text);\nutterance.lang = this.selectedLanguage;\nspeechSynthesis.speak(utterance);\n},\ncheckAnswer() {\nconst userAnswer = this.userInput.trim();\nconst expectedAnswer = this.selectedSubject.text.trim();\n  if (userAnswer === expectedAnswer) {\n    alert(\"Bonne réponse !\");\n  } else {\n    alert(\"Mauvaise réponse. Réessayez !\");\n  }\n\n  if (this.currentRepetition < this.maxRepetitions) {\n    this.currentRepetition++;\n    this.isDictationStarted = true;\n  } else {\n    // ...\n  }\n\n  // Réinitialiser les valeurs\n  this.isDictationStarted = false;\n  this.currentText = \"\";\n  this.userInput = \"\";\n}\n}\n};\n</script>\n<style scoped>\n.test-dictation {\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1,\nh2 {\n  text-align: center;\n}\n\nselect,\nbutton {\n  margin-bottom: 10px;\n}\n\ntextarea {\n  width: 100%;\n  height: 100px;\n  margin-bottom: 10px;\n}\n\n/* ... */\n.timer {\n  text-align: center;\n}\n\n.repetitions {\n  text-align: center;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}