{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedLanguage: 'fr-FR',\n      // Remplacez 'fr-FR' par la langue de votre choix\n      maxRepetitions: 3,\n      // Nombre maximal de répétitions autorisées\n      currentRepetition: 1,\n      timer: null,\n      timeLimit: 60,\n      // Temps limite en secondes\n      timeRemaining: 0,\n      repetitionsEnabled: false,\n      isCreatingNewSubject: false,\n      newSubject: {\n        title: \"\",\n        text: \"\",\n        synth: null\n      },\n      subjects: [{\n        title: \"Sujet 1\",\n        difficulty: \"facile\",\n        text: \"Le test de dictée est un excellent moyen d'améliorer ses compétences en orthographe. Ainsi il le faut vraiment pour un language meilleur.\"\n      }, {\n        title: \"Sujet 2\",\n        difficulty: \"moyen\",\n        text: \"La dictée est un exercice classique souvent utilisé dans les écoles pour évaluer les capacités des élèves.\"\n      }, {\n        title: \"Sujet 3\",\n        difficulty: \"difficile\",\n        text: \"La vitesse de lecture et la précision sont des aspects importants lors d'un test de dictée.\"\n      }, {\n        title: \"Sujet 4\",\n        difficulty: \"difficile\",\n        text: \"Voici des exemples de problématiques et de sujets dont vous pouvez vous inspirer dans la production de vos mémoires, thèses ou dissertations. Vous pouvez également les ajuster en fonction de votre formation, thème ou sujet principal.\"\n      }],\n      selectedDifficulty: \"\",\n      selectedSubject: null,\n      isDictationStarted: false,\n      currentText: \"\",\n      userInput: \"\"\n    };\n  },\n  computed: {\n    filteredSubjects() {\n      if (this.selectedDifficulty) {\n        return this.subjects.filter(subject => subject.difficulty === this.selectedDifficulty);\n      } else {\n        return this.subjects;\n      }\n    }\n  },\n  methods: {\n    createSubject() {\n      const newSubject = {\n        title: \"Nouveau sujet\",\n        difficulty: \"\",\n        text: \"\"\n      };\n      this.isCreatingNewSubject = true;\n      this.newSubject = {\n        title: \"\",\n        text: \"\"\n      };\n      this.subjects.push(newSubject);\n      this.selectedSubject = newSubject;\n    },\n    updateSubject() {\n      // Implémentez la logique pour mettre à jour le sujet sélectionné\n    },\n    deleteSubject() {\n      // Implémentez la logique pour supprimer le sujet sélectionné\n    },\n    cancelNewSubject() {\n      this.isCreatingNewSubject = false;\n      this.newSubject = null;\n    },\n    saveNewSubject() {\n      // Génère un ID et un numéro pour le nouveau sujet\n      const newId = this.subjects.length > 0 ? this.subjects[this.subjects.length - 1].id + 1 : 1;\n      const newNumber = this.subjects.length + 1;\n\n      // Crée le nouvel objet sujet\n      const newSubject = {\n        id: newId,\n        number: newNumber,\n        title: this.newSubject.title,\n        difficulty: \"\",\n        // Définir la difficulté selon les besoins\n        text: this.newSubject.text\n      };\n\n      // Ajoute le sujet au tableau\n      this.subjects.push(newSubject);\n\n      // Réinitialise les valeurs pour le prochain nouveau sujet\n      this.newSubject.title = \"\";\n      this.newSubject.text = \"\";\n\n      // Sélectionne le nouveau sujet créé\n      this.selectedSubject = newSubject;\n\n      // Désactive le mode de création de nouveau sujet\n      this.isCreatingNewSubject = false;\n    },\n    repeatDictation() {\n      this.speakGeneralRepeat();\n    },\n    startDictation() {\n      this.currentRepetition = 1;\n      this.timeRemaining = this.timeLimit;\n      this.timer = setInterval(() => {\n        if (this.timeRemaining > 0) {\n          this.timeRemaining--;\n        } else {\n          clearInterval(this.timer);\n          this.checkAnswer();\n        }\n      }, 1000);\n      this.isDictationStarted = true;\n      this.currentText = this.selectedSubject.text; // Modifier ici pour utiliser la variable correcte\n      this.speakText(this.selectedSubject.text, this.selectedSubject.repetitions, this.repetitionsEnabled); // Modifier ici pour utiliser la variable correcte\n    },\n\n    speakText(fullText, repetitions) {\n      if (this.synth === undefined) {\n        this.synth = window.speechSynthesis;\n      }\n      const phrases = fullText.split('. ');\n      const speechQueue = [];\n      phrases.forEach(text => {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.voice = this.selectedVoice;\n        utterance.volume = isFinite(this.volume) ? this.volume : 1;\n        utterance.pitch = isFinite(this.pitch) ? this.pitch : 1;\n        utterance.rate = isFinite(this.rate) ? this.rate : 1;\n        utterance.onend = () => {\n          if (repetitions > 0) {\n            speechQueue.push(utterance);\n            speechQueue.push(new SpeechSynthesisUtterance(text));\n            repetitions--;\n          }\n          if (speechQueue.length > 0) {\n            const nextUtterance = speechQueue.shift();\n            this.synth.speak(nextUtterance);\n          }\n        };\n        speechQueue.push(utterance);\n      });\n      const firstUtterance = speechQueue.shift();\n      this.synth.speak(firstUtterance);\n    },\n    speakGeneralRepeat() {\n      if (this.selectedSubject && this.selectedSubject.phrases) {\n        const fullText = this.selectedSubject.phrases.map(phrase => phrase.text).join('. ');\n        const repetitions = this.selectedSubject.phrases.reduce((total, phrase) => total + phrase.repetitions, 0);\n        this.speakText(fullText, repetitions);\n      }\n    },\n    checkAnswer() {\n      const userAnswer = this.userInput.trim();\n      const expectedAnswer = this.selectedSubject.text.trim();\n      if (userAnswer === expectedAnswer) {\n        alert(\"Bonne réponse !\");\n      } else {\n        alert(\"Mauvaise réponse. Réessayez !\");\n      }\n      if (this.currentRepetition < this.maxRepetitions) {\n        this.currentRepetition++;\n        this.isDictationStarted = true;\n      } else {\n        // ...\n      }\n      // Réinitialiser les valeurs\n      this.isDictationStarted = false;\n      this.currentText = \"\";\n      this.userInput = \"\";\n    }\n  }\n};","map":{"version":3,"names":["data","selectedLanguage","maxRepetitions","currentRepetition","timer","timeLimit","timeRemaining","repetitionsEnabled","isCreatingNewSubject","newSubject","title","text","synth","subjects","difficulty","selectedDifficulty","selectedSubject","isDictationStarted","currentText","userInput","computed","filteredSubjects","filter","subject","methods","createSubject","push","updateSubject","deleteSubject","cancelNewSubject","saveNewSubject","newId","length","id","newNumber","number","repeatDictation","speakGeneralRepeat","startDictation","setInterval","clearInterval","checkAnswer","speakText","repetitions","fullText","undefined","window","speechSynthesis","phrases","split","speechQueue","forEach","utterance","SpeechSynthesisUtterance","voice","selectedVoice","volume","isFinite","pitch","rate","onend","nextUtterance","shift","speak","firstUtterance","map","phrase","join","reduce","total","userAnswer","trim","expectedAnswer","alert"],"sources":["/home/lompo/Bureau/test-dictee-app/src/components/HelloWorld.vue"],"sourcesContent":["import { subjects } from \"@/data\";\n\n<template>\n  <div class=\"test-dictation\">\n\n    <h1><span>Dicté en ligne</span></h1>\n    <div class=\"container\">\n      <label for=\"difficulty\">Niveau de difficulté :</label>\n      <select id=\"difficulty\" v-model=\"selectedDifficulty\">\n        <option value=\"facile\">Facile</option>\n        <option value=\"moyen\">Moyen</option>\n        <option value=\"difficile\">Difficile</option>\n      </select>\n    </div>\n\n    <div class=\"container\">\n      <label for=\"language\">Langue :</label>\n      <select id=\"language\" v-model=\"selectedLanguage\">\n        <option value=\"en-US\">English</option>\n        <option value=\"fr-FR\">Français</option>\n        <!-- Ajoutez d'autres options pour les autres langues si nécessaire -->\n      </select>\n    </div>\n\n    <div v-if=\"filteredSubjects.length > 0\" class=\"container\">\n      <label for=\"subject\">Sujet :</label>\n      <select id=\"subject\" v-model=\"selectedSubject\">\n        <option value=\"\" disabled selected>Sélectionnez un sujet</option>\n        <option v-for=\"subject in filteredSubjects\" :key=\"subject.title\" :value=\"subject\">{{ subject.title }}</option>\n      </select>\n      </div>\n      <div class=\"subject-actions\">\n        <button @click=\"createSubject\">Nouveau sujet</button>\n        <button @click=\"updateSubject\">Mettre à jour</button>\n        <button @click=\"deleteSubject\">Supprimer</button>\n        \n      </div>\n    \n       <div v-if=\"isCreatingNewSubject\">\n        <h2>Nouveau sujet</h2>\n        <label for=\"new-subject-title\">Titre :</label>\n        <input type=\"text\" id=\"new-subject-title\" v-model=\"newSubject.title\">\n\n        <label for=\"new-subject-text\">Texte :</label>\n        <textarea id=\"new-subject-text\" v-model=\"newSubject.text\"></textarea>\n\n        <button @click=\"saveNewSubject\">Enregistrer</button>\n        <button @click=\"cancelNewSubject\">Annuler</button>\n       </div>\n\n    <div v-if=\"selectedSubject\">\n      <h2>{{ selectedSubject.title }}</h2>\n      <button @click=\"startDictation\">Commencer la dictée</button>\n\n      <div v-if=\"isDictationStarted\">\n        <p>{{ currentText }}</p>\n        <textarea v-model=\"userInput\"></textarea>\n        <button @click=\"checkAnswer\">Vérifier</button>\n        <button @click=\"speakText(selectedSubject.text)\">Lire le texte</button>\n\n        <label for=\"repetitionsEnabled\">\n          <input\n            id=\"repetitionsEnabled\"\n            type=\"checkbox\"\n            v-model=\"repetitionsEnabled\"\n          >\n          Répéter les phrases\n        </label>\n\n        <div>\n          <p>Temps restant : {{ timeRemaining }}s</p>\n        </div>\n        \n        <h2>{{ selectedSubject.title }}</h2>\n        <button @click=\"startDictation\">{{ (\"Reprendre\") }}</button>\n        <div v-for=\"phrase in selectedSubject.phrases\" :key=\"phrase.text\">\n           <p>{{ phrase.text }}</p>\n           <input type=\"number\" v-model=\"phrase.repetitions\" min=\"1\">\n        </div>\n        <button @click=\"startGeneralRepeat\">{{ (\"RépétitionGénéral\") }}</button>\n        <button @click=\"repeatDictation\">Répéter</button>\n\n        <div>\n          <p>Répétitions restantes : {{ maxRepetitions - currentRepetition }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n\n  data() {\n\n    return {\n      selectedLanguage: 'fr-FR', // Remplacez 'fr-FR' par la langue de votre choix\n      maxRepetitions: 3, // Nombre maximal de répétitions autorisées\n      currentRepetition: 1,\n      timer: null,\n      timeLimit: 60, // Temps limite en secondes\n      timeRemaining: 0,\n      repetitionsEnabled: false,\n      isCreatingNewSubject: false,\n      newSubject: {\n      title: \"\",\n      text: \"\",\n       synth: null,\n    },\n\n      subjects: [\n        {\n          title: \"Sujet 1\",\n          difficulty: \"facile\",\n          text: \"Le test de dictée est un excellent moyen d'améliorer ses compétences en orthographe. Ainsi il le faut vraiment pour un language meilleur.\"\n        },\n\n        {\n          title: \"Sujet 2\",\n          difficulty: \"moyen\",\n          text: \"La dictée est un exercice classique souvent utilisé dans les écoles pour évaluer les capacités des élèves.\"\n        },\n\n        {\n          title: \"Sujet 3\",\n          difficulty: \"difficile\",\n          text: \"La vitesse de lecture et la précision sont des aspects importants lors d'un test de dictée.\"\n        },\n        {\n          title: \"Sujet 4\",\n          difficulty: \"difficile\",\n          text: \"Voici des exemples de problématiques et de sujets dont vous pouvez vous inspirer dans la production de vos mémoires, thèses ou dissertations. Vous pouvez également les ajuster en fonction de votre formation, thème ou sujet principal.\"\n        },\n      ],\n        selectedDifficulty: \"\",\n        selectedSubject: null,\n        isDictationStarted: false,\n        currentText: \"\",\n        userInput: \"\"\n    };\n  },\n\n    computed: {\n        filteredSubjects() {\n          if (this.selectedDifficulty) {\n          return this.subjects.filter(subject => subject.difficulty === this.selectedDifficulty);\n          } \n          else {\n            return this.subjects;\n          }\n        }\n      },\n\n    methods: {\n        createSubject() {\n          const newSubject = {\n            title: \"Nouveau sujet\",\n            difficulty: \"\",\n            text: \"\", \n          };\n          this.isCreatingNewSubject = true;\n          this.newSubject = {\n            title: \"\",\n            text: \"\"\n          };\n          this.subjects.push(newSubject);\n          this.selectedSubject = newSubject;\n        },\n\n        updateSubject() {\n             // Implémentez la logique pour mettre à jour le sujet sélectionné\n        },\n        deleteSubject() {\n             // Implémentez la logique pour supprimer le sujet sélectionné\n        },\n\n        cancelNewSubject() {\n          this.isCreatingNewSubject = false;\n          this.newSubject = null;\n        },\n\n         saveNewSubject() {\n          // Génère un ID et un numéro pour le nouveau sujet\n          const newId = this.subjects.length > 0 ? this.subjects[this.subjects.length - 1].id + 1 : 1;\n          const newNumber = this.subjects.length + 1;\n\n          // Crée le nouvel objet sujet\n          const newSubject = {\n            id: newId,\n            number: newNumber,\n            title: this.newSubject.title,\n            difficulty: \"\", // Définir la difficulté selon les besoins\n            text: this.newSubject.text\n          };\n\n          // Ajoute le sujet au tableau\n          this.subjects.push(newSubject);\n\n          // Réinitialise les valeurs pour le prochain nouveau sujet\n          this.newSubject.title = \"\";\n          this.newSubject.text = \"\";\n          \n          // Sélectionne le nouveau sujet créé\n          this.selectedSubject = newSubject;\n\n          // Désactive le mode de création de nouveau sujet\n          this.isCreatingNewSubject = false;\n        },\n\n        repeatDictation() {\n          this.speakGeneralRepeat();\n        },\n\n      startDictation() {\n          this.currentRepetition = 1;\n          this.timeRemaining = this.timeLimit;\n          this.timer = setInterval(() => {\n            if (this.timeRemaining > 0) {\n              this.timeRemaining--;\n            } else {\n              clearInterval(this.timer);\n              this.checkAnswer();\n            }\n          }, 1000);\n          this.isDictationStarted = true;\n          this.currentText = this.selectedSubject.text; // Modifier ici pour utiliser la variable correcte\n          this.speakText(this.selectedSubject.text, this.selectedSubject.repetitions, this.repetitionsEnabled); // Modifier ici pour utiliser la variable correcte\n      },\n\n     speakText(fullText, repetitions) {\n      if (this.synth === undefined) {\n        this.synth = window.speechSynthesis;\n      }\n\n      const phrases = fullText.split('. ');\n      const speechQueue = [];\n\n      phrases.forEach((text) => {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.voice = this.selectedVoice;\n        utterance.volume = isFinite(this.volume) ? this.volume : 1;\n        utterance.pitch = isFinite(this.pitch) ? this.pitch : 1;\n        utterance.rate = isFinite(this.rate) ? this.rate : 1;\n\n        utterance.onend = () => {\n          if (repetitions > 0) {\n            speechQueue.push(utterance);\n            speechQueue.push(new SpeechSynthesisUtterance(text));\n            repetitions--;\n          }\n\n          if (speechQueue.length > 0) {\n            const nextUtterance = speechQueue.shift();\n            this.synth.speak(nextUtterance);\n          }\n        };\n\n        speechQueue.push(utterance);\n      });\n\n      const firstUtterance = speechQueue.shift();\n      this.synth.speak(firstUtterance);\n    },\n\n\n\n      speakGeneralRepeat() {\n        if (this.selectedSubject && this.selectedSubject.phrases) {\n          const fullText = this.selectedSubject.phrases.map(phrase => phrase.text).join('. ');\n          const repetitions = this.selectedSubject.phrases.reduce((total, phrase) => total + phrase.repetitions, 0);\n\n          this.speakText(fullText, repetitions);\n        }\n      },\n\n\n      checkAnswer() {\n          const userAnswer = this.userInput.trim();\n          const expectedAnswer = this.selectedSubject.text.trim();\n            if (userAnswer === expectedAnswer) {\n              alert(\"Bonne réponse !\");\n            } else {\n              alert(\"Mauvaise réponse. Réessayez !\");\n            }\n\n            if (this.currentRepetition < this.maxRepetitions) {\n              this.currentRepetition++;\n              this.isDictationStarted = true;\n            } else {\n              // ...\n            }\n            // Réinitialiser les valeurs\n            this.isDictationStarted = false;\n            this.currentText = \"\";\n            this.userInput = \"\";\n          }\n        }\n  };\n</script>\n\n<style>\n  /* Importer votre fichier CSS externe */\n  @import './hello-world.css';\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}