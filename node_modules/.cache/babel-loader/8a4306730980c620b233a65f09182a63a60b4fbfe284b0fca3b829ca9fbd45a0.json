{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      maxRepetitions: 3,\n      // Nombre maximal de répétitions autorisées\n      currentRepetition: 1,\n      timer: null,\n      timeLimit: 60,\n      // Temps limite en secondes\n      timeRemaining: 0,\n      subjects: [{\n        title: \"Sujet 1\",\n        difficulty: \"facile\",\n        text: \"Le test de dictée est un excellent moyen d'améliorer ses compétences en orthographe.\"\n      }, {\n        title: \"Sujet 2\",\n        difficulty: \"moyen\",\n        text: \"La dictée est un exercice classique souvent utilisé dans les écoles pour évaluer les capacités des élèves.\"\n      }, {\n        title: \"Sujet 3\",\n        difficulty: \"difficile\",\n        text: \"La vitesse de lecture et la précision sont des aspects importants lors d'un test de dictée.\"\n      }],\n      selectedDifficulty: \"\",\n      selectedSubject: null,\n      isDictationStarted: false,\n      currentText: \"\",\n      userInput: \"\"\n    };\n  },\n  computed: {\n    filteredSubjects() {\n      if (this.selectedDifficulty) {\n        return this.subjects.filter(subject => subject.difficulty === this.selectedDifficulty);\n      } else {\n        return this.subjects;\n      }\n    }\n  },\n  methods: {\n    createSubject() {\n      const newSubject = {\n        title: \"Nouveau sujet\",\n        difficulty: \"\",\n        text: \"\"\n      };\n      this.subjects.push(newSubject);\n      this.selectedSubject = newSubject;\n    },\n    updateSubject() {\n      // Implémentez la logique pour mettre à jour le sujet sélectionné\n    },\n    deleteSubject() {\n      // Implémentez la logique pour supprimer le sujet sélectionné\n    },\n    startDictation() {\n      this.currentRepetition = 1;\n      this.timeRemaining = this.timeLimit;\n      this.timer = setInterval(() => {\n        if (this.timeRemaining > 0) {\n          this.timeRemaining--;\n        } else {\n          clearInterval(this.timer);\n          this.checkAnswer();\n        }\n      }, 1000);\n      this.isDictationStarted = true;\n      this.currentText = this.selectedSubject.text;\n    },\n    speakText() {\n      const textToSpeak = this.selectedSubject.text;\n      this.$speech.say(textToSpeak);\n    },\n    checkAnswer() {\n      const userAnswer = this.userInput.trim();\n      const expectedAnswer = this.selectedSubject.text.trim();\n      if (userAnswer === expectedAnswer) {\n        alert(\"Bonne réponse !\");\n      } else {\n        alert(\"Mauvaise réponse. Réessayez !\");\n      }\n      if (userAnswer === expectedAnswer) {\n        // ...\n        if (this.currentRepetition < this.maxRepetitions) {\n          this.currentRepetition++;\n          this.isDictationStarted = true;\n        } else {\n          // ...\n        }\n      }\n\n      // Réinitialiser les valeurs\n      this.isDictationStarted = false;\n      this.currentText = \"\";\n      this.userInput = \"\";\n    }\n  }\n};","map":{"version":3,"names":["data","maxRepetitions","currentRepetition","timer","timeLimit","timeRemaining","subjects","title","difficulty","text","selectedDifficulty","selectedSubject","isDictationStarted","currentText","userInput","computed","filteredSubjects","filter","subject","methods","createSubject","newSubject","push","updateSubject","deleteSubject","startDictation","setInterval","clearInterval","checkAnswer","speakText","textToSpeak","$speech","say","userAnswer","trim","expectedAnswer","alert"],"sources":["C:\\Users\\Abel\\Desktop\\VUE\\Dicte\\test-dictee-app\\src\\components\\HelloWorld.vue"],"sourcesContent":["import VueSpeech from \"vue-speech\";\n<template>\n  <div class=\"test-dictation\">\n    <h1>Test de dictée</h1>\n    <div>\n      <label for=\"difficulty\">Niveau de difficulté :</label>\n      <select id=\"difficulty\" v-model=\"selectedDifficulty\">\n        <option value=\"facile\">Facile</option>\n        <option value=\"moyen\">Moyen</option>\n        <option value=\"difficile\">Difficile</option>\n      </select>\n    </div>\n    <div v-if=\"filteredSubjects.length > 0\">\n  <label for=\"subject\">Sujet :</label>\n  <select id=\"subject\" v-model=\"selectedSubject\">\n    <option value=\"\" disabled selected>Sélectionnez un sujet</option>\n    <option v-for=\"subject in filteredSubjects\" :key=\"subject.title\" :value=\"subject\">{{ subject.title }}</option>\n  </select>\n\n  <div class=\"subject-actions\">\n    <button @click=\"createSubject\">Nouveau sujet</button>\n    <button @click=\"updateSubject\">Mettre à jour</button>\n    <button @click=\"deleteSubject\">Supprimer</button>\n  </div>\n</div>\n\n    <div v-if=\"selectedSubject\">\n    <h2>{{ selectedSubject.title }}</h2>\n    <button @click=\"startDictation\">Commencer la dictée</button>\n\n    <div v-if=\"isDictationStarted\">\n      <p>{{ currentText }}</p>\n      <textarea v-model=\"userInput\"></textarea>\n      <button @click=\"checkAnswer\">Vérifier</button>\n      <button @click=\"speakText\">Lire le texte</button>\n      <div>\n       <p>Temps restant : {{ timeRemaining }}s</p>\n      </div>\n      <div>\n    <p>Répétitions restantes : {{ maxRepetitions - currentRepetition }}</p>\n  </div>\n    </div>\n\n  </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  data() {\n  return {\n    maxRepetitions: 3, // Nombre maximal de répétitions autorisées\n    currentRepetition: 1,\n    timer: null,\n    timeLimit: 60, // Temps limite en secondes\n    timeRemaining: 0,\n\n    subjects: [\n      {\n        title: \"Sujet 1\",\n        difficulty: \"facile\",\n        text: \"Le test de dictée est un excellent moyen d'améliorer ses compétences en orthographe.\"\n      },\n      {\n        title: \"Sujet 2\",\n        difficulty: \"moyen\",\n        text: \"La dictée est un exercice classique souvent utilisé dans les écoles pour évaluer les capacités des élèves.\"\n      },\n      {\n        title: \"Sujet 3\",\n        difficulty: \"difficile\",\n        text: \"La vitesse de lecture et la précision sont des aspects importants lors d'un test de dictée.\"\n      }\n    ],\n    selectedDifficulty: \"\",\n    selectedSubject: null,\n    isDictationStarted: false,\n    currentText: \"\",\n    userInput: \"\"\n  };\n},\ncomputed: {\n  filteredSubjects() {\n    if (this.selectedDifficulty) {\n      return this.subjects.filter(subject => subject.difficulty === this.selectedDifficulty);\n    } else {\n      return this.subjects;\n    }\n  }\n},\n\n  methods: {\n\n     createSubject() {\n    const newSubject = {\n      title: \"Nouveau sujet\",\n      difficulty: \"\",\n      text: \"\"\n    }\n    this.subjects.push(newSubject);\n    this.selectedSubject = newSubject;\n  },\n\n  updateSubject() {\n    // Implémentez la logique pour mettre à jour le sujet sélectionné\n  },\n\n  deleteSubject() {\n    // Implémentez la logique pour supprimer le sujet sélectionné\n  },\n\n    startDictation() {\n       this.currentRepetition = 1;\n      this.timeRemaining = this.timeLimit;\n    this.timer = setInterval(() => {\n      if (this.timeRemaining > 0) {\n        this.timeRemaining--;\n      } else {\n        clearInterval(this.timer);\n        this.checkAnswer();\n      }\n    }, 1000)\n      this.isDictationStarted = true;\n      this.currentText = this.selectedSubject.text;\n    },\n    speakText() {\n      const textToSpeak = this.selectedSubject.text;\n      this.$speech.say(textToSpeak);\n    },\n    checkAnswer() {\n      const userAnswer = this.userInput.trim();\n      const expectedAnswer = this.selectedSubject.text.trim();\n\n      if (userAnswer === expectedAnswer) {\n        alert(\"Bonne réponse !\");\n      } else {\n        alert(\"Mauvaise réponse. Réessayez !\");\n      }\n      if (userAnswer === expectedAnswer) {\n      // ...\n      if (this.currentRepetition < this.maxRepetitions) {\n        this.currentRepetition++;\n        this.isDictationStarted = true;\n      } else {\n        // ...\n      }\n    }\n\n      // Réinitialiser les valeurs\n      this.isDictationStarted = false;\n      this.currentText = \"\";\n      this.userInput = \"\";\n    }\n  }\n}\n\n\n</script>\n<style scoped>\n.test-dictation {\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1, h2 {\n  text-align: center;\n}\n\nselect, button {\n  margin-bottom: 10px;\n}\n\ntextarea {\n  width: 100%;\n  height: 100px;\n  margin-bottom: 10px;\n}\n</style>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}